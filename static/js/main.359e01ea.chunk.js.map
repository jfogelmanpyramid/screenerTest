{"version":3,"sources":["img/Play.png","img/Pause.png","img/Stop.png","img/TVOffDvdOff.png","img/LightRedPowerOff.png","img/GreenUpGrey.png","img/GreenDownGrey.png","img/RedVolumeGrey.png","img/DvdPowerOff.png","img/Eject.png","index.js","img/TVOffDvdOn.png","img/TVOnDvdOff.png","img/TVOnDvdOn.png","img/TVOffDvdOffDiskEjected.png","img/TVOffDvdOnDiskEjected.png","img/TVOnDvdOffDiskEjected.png","img/TVOnDvdOnDiskEjected.png","img/GreenPowerOn.png","img/GreenUpKey.png","img/GreenDownKey.png","img/RedVolume.png","img/DarkVolumeRedX.png","img/EjectActive.png","img/DvdPowerOn.png","img/PlayActive.png","img/PauseActive.png","img/StopActive.png"],"names":["module","exports","ResetTestButton","props","className","onClick","EmptyScreen","React","Component","TvImage","src","alt","ImageButton","height","TvControls","style","this","PowerLevel","ResidualPower","tvPowerSrc","switchTvPower","volumeUpSrc","volumeUp","volumeDownSrc","volumeDown","muteSrc","mute","color","tvPower","muted","volume","classname","backgroundColor","DvdControls","dvdPowerSrc","switchDvdPower","dvdPlaySrc","dvdPlay","dvdPauseSrc","dvdPause","dvdStopSrc","dvdStop","dvdEjectSrc","dvdEject","dvdPower","dvdState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.359e01ea.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Play.fa077177.png\";","module.exports = __webpack_public_path__ + \"static/media/Pause.ed2945c6.png\";","module.exports = __webpack_public_path__ + \"static/media/Stop.c32fd208.png\";","module.exports = __webpack_public_path__ + \"static/media/TVOffDvdOff.f7ced528.png\";","module.exports = __webpack_public_path__ + \"static/media/LightRedPowerOff.518e7c57.png\";","module.exports = __webpack_public_path__ + \"static/media/GreenUpGrey.142b51e4.png\";","module.exports = __webpack_public_path__ + \"static/media/GreenDownGrey.6b86399c.png\";","module.exports = __webpack_public_path__ + \"static/media/RedVolumeGrey.a5e88366.png\";","module.exports = __webpack_public_path__ + \"static/media/DvdPowerOff.f4529858.png\";","module.exports = __webpack_public_path__ + \"static/media/Eject.bce0855b.png\";","import React from 'react';\nimport ReactDOM, { render } from 'react-dom';\nimport './index.css';\nconst TV_ON = 125;\nconst DVD_ON = 30;\nconst TV_OFF = 5;\nconst DVD_OFF = 5;\nconst DVD_PLAY = 5;\nconst DVD_PAUSE = 3;\nconst DVD_EJECT = 2;\nconst DVD_LOAD = 2;\nconst TV_VOLUME = 2;\nconst dvdStateStopped = 'stopped';\nconst dvdStatePlaying = 'playing';\nconst dvdStatePaused = 'paused';\n\nfunction ResetTestButton(props) {\n  return (\n    <div className=\"centerMe\">\n      <button className=\"resetButton\" onClick={props.onClick}>\n        {\"RESET TEST\"}\n      </button>\n    </div>\n  );\n\n}\n\nclass EmptyScreen extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <div>\n      </div>\n    )\n  }\n}\n\n\nfunction TvImage(props) {\n  return (\n    <img src={props.src} alt={props.alt}></img>\n  )\n}\n\nfunction ImageButton(props) {\n  return (\n    <img src={props.src} alt={props.alt} onClick={props.onClick} height=\"60\"></img>\n  )\n}\n\nclass TvControls extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <div>\n        <div style={{\n          \"height\": \"5px\",\n          \"backgroundColor\": \"hsl(\" + (60 - (this.props.PowerLevel * 60) / 200) + \", 100%, 50%)\"\n        }}>\n          &nbsp;&nbsp;</div>\n        <div style={{\n          \"height\": \"5px\",\n          \"backgroundColor\": \"hsl(\" + (60 - (this.props.ResidualPower * 60) / 100) + \", 100%, 50%)\"\n        }}>\n          &nbsp;&nbsp;</div>\n        <div className=\"centerMeWithoutWrapGrey\">\n          <div>\n            <div className=\"controlLabel\">TV Controls</div>\n          </div>\n          <p className='newline'></p>\n          <ImageButton src={this.props.tvPowerSrc} alt=\"TV POWER OFF\" onClick={() => { this.props.switchTvPower() }}></ImageButton>\n          <ImageButton src={this.props.volumeUpSrc} alt=\"VOLUME UP\" onClick={() => { this.props.volumeUp() }}></ImageButton>\n          <ImageButton src={this.props.volumeDownSrc} alt=\"VOLUME DOWN\" onClick={() => { this.props.volumeDown() }}></ImageButton>\n          <ImageButton src={this.props.muteSrc} alt=\"MUTE\" onClick={() => { this.props.mute() }}></ImageButton>\n          <div>\n            <p className=\"controlLabel\" style={{\n              color:\n                this.props.tvPower && !this.props.muted ? \"lime\" : \"red\"\n            }}> {'VOLUME: ' + this.props.volume} %</p>\n          </div>\n          <div className=\"controlLabel\">{this.props.muted ? 'MUTED' : 'NOT MUTED'}</div>\n          <div classname=\"controlLabel\" style={{\n            \"font-family\": \"Arial\",\n            \"font-weight\": \"bold\",\n            \"font-size\": \"large\",\n            backgroundColor:\n              this.props.tvPower ? \"lime\" : \"red\"\n          }}>\n            TV Status: {this.props.tvPower ? 'TV ON' : 'TV OFF'} </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nclass DvdControls extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"centerMeWithoutWrapGrey\">\n          <div>\n            <div className=\"controlLabel\">DVD Controls</div>\n          </div>\n          <p className='newline'></p>\n          <ImageButton src={this.props.dvdPowerSrc} alt=\"DVD POWER\" onClick={() => { this.props.switchDvdPower() }}></ImageButton>\n          <ImageButton src={this.props.dvdPlaySrc} alt=\"DVD PLAY\" onClick={() => { this.props.dvdPlay() }}></ImageButton>\n          <ImageButton src={this.props.dvdPauseSrc} alt=\"DVD PAUSE\" onClick={() => { this.props.dvdPause() }}></ImageButton>\n          <ImageButton src={this.props.dvdStopSrc} alt=\"DVD STOP\" onClick={() => { this.props.dvdStop() }}></ImageButton>\n          <ImageButton src={this.props.dvdEjectSrc} alt=\"DVD EJECT\" onClick={() => { this.props.dvdEject() }}></ImageButton>\n          <div classname=\"dvdStatusLabel\" style={{\n            \"font-family\": \"Arial\",\n            \"font-weight\": \"bold\",\n            \"font-size\": \"large\",\n            backgroundColor:\n              this.props.dvdPower ? \"lime\" : \"red\"\n          }}>\n            DVD Status: {this.props.dvdPower ? 'DVD ON' : 'DVD OFF'} </div>\n          <div style={{\n            \"font-family\": \"Arial\",\n            \"font-weight\": \"bold\",\n            \"font-size\": \"large\",\n            \"padding-left\": \"10px\",\n            backgroundColor:\n              this.props.dvdState === dvdStateStopped ? 'red' :\n                (this.props.dvdState === dvdStatePlaying ? 'lime' :\n                  'orange')\n          }}> {\n              this.props.dvdState === dvdStateStopped ? 'DVD STOPPED' :\n                (this.props.dvdState === dvdStatePlaying ? 'DVD PLAYING' :\n                  'DVD PAUSED')\n            } </div>\n\n        </div>\n      </div>\n    )\n  }\n}\n\nclass Screener extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      resetted: 'true',\n      tvPower: false,\n      dvdPower: false,\n      dvdEjected: false,\n      imgSrc: require('./img/TVOffDvdOff.png'),\n      tvPowerSrc: require('./img/LightRedPowerOff.png'),\n      volumeUpSrc: require('./img/GreenUpGrey.png'),\n      volumeDownSrc: require('./img/GreenDownGrey.png'),\n      muteSrc: require('./img/RedVolumeGrey.png'),\n      dvdPowerSrc: require('./img/DvdPowerOff.png'),\n      dvdPlaySrc: require('./img/Play.png'),\n      dvdPauseSrc: require('./img/Pause.png'),\n      dvdStopSrc: require('./img/Stop.png'),\n      dvdEjectSrc: require('./img/Eject.png'),\n      // refreshFxn : this.refreshTvImage,\n      triggerRefresh: false,\n      volume: 50,\n      volumeColor: \"green\",\n      dvdState: dvdStateStopped,\n      muted: false,\n      PowerLevel: 0,\n      ResidualPower: 0,\n      LoadedFlag: false,\n      TVSwitchCount: 0,\n      UnmutedLevel: 100,\n      ShortedFlag: false,\n    }\n  }\n\n  handleResetButton() {\n    this.ResetTest();\n  }\n\n  refreshTvImage() {\n    var bTvOff = Boolean(!this.state.tvPower);\n    var bDvdOff = Boolean(!this.state.dvdPower)\n    if (!this.state.dvdEjected) {\n      if (bTvOff && bDvdOff)\n        this.setState({ imgSrc: require('./img/TVOffDvdOff.png') });\n      else if (bTvOff && !bDvdOff)\n        this.setState({ imgSrc: require('./img/TVOffDvdOn.png') });\n      else if (!bTvOff && bDvdOff)\n        this.setState({ imgSrc: require('./img/TVOnDvdOff.png') });\n      else if (!bTvOff && !bDvdOff)\n        this.setState({ imgSrc: require('./img/TVOnDvdOn.png') });\n    }\n    else if (this.state.dvdEjected) {\n      if (bTvOff && bDvdOff)\n        this.setState({ imgSrc: require('./img/TVOffDvdOffDiskEjected.png') });\n      else if (bTvOff && !bDvdOff)\n        this.setState({ imgSrc: require('./img/TVOffDvdOnDiskEjected.png') });\n      else if (!bTvOff && bDvdOff)\n        this.setState({ imgSrc: require('./img/TVOnDvdOffDiskEjected.png') });\n      else if (!bTvOff && !bDvdOff)\n        this.setState({ imgSrc: require('./img/TVOnDvdOnDiskEjected.png') });\n    }\n\n  }\n\n  switchTvPower() {\n    if (this.state.TVSwitchCount >= 4)\n      return;\n\n    if (!this.state.tvPower && !this.state.ShortedFlag) {\n      var currentVolume = this.state.volume;\n      var originalVolume = 50;\n      var volumePower = this.state.PowerLevel;\n      volumePower = (TV_VOLUME * currentVolume * 0.75) - (TV_VOLUME * originalVolume * 0.75);\n      var newPower = this.state.PowerLevel;\n      newPower = newPower + TV_ON - TV_OFF + volumePower;\n\n      this.setState({ tvPower: true });\n      this.setState({ PowerLevel: newPower });\n      this.setState({\n        ResidualPower: this.state.ResidualPower\n          + TV_ON * 0.10\n      });\n      this.setState({ TVSwitchCount: this.state.TVSwitchCount + 1 });\n      this.AdjustPowerLevel();\n      this.setState({ triggerRefresh: true });\n    }\n    else if (this.state.tvPower && !this.state.ShortedFlag) {\n      currentVolume = this.state.volume;\n      originalVolume = 50;\n      volumePower = this.state.PowerLevel;\n      volumePower = (TV_VOLUME * currentVolume * 0.75) - (TV_VOLUME * originalVolume * 0.75);\n      newPower = this.state.PowerLevel;\n      newPower += TV_OFF - TV_ON - volumePower;\n\n      this.setState({ tvPower: false });\n      this.setState({ PowerLevel: newPower });\n      this.setState({\n        ResidualPower: this.state.ResidualPower\n          + TV_ON * 0.10\n      });\n\n      if (this.state.muted) {\n        this.setState({ muted: false });\n        this.setState({ UnmutedLevel: this.state.CurrentVolume });\n      }\n\n      this.setState({ TVSwitchCount: this.state.TVSwitchCount + 1 });\n\n      this.setState({ triggerRefresh: true });\n      this.AdjustPowerLevel();\n    }\n  }\n\n  switchDvdPower() {\n    if (!this.state.dvdPower && !this.state.ShortedFlag) {\n      this.setState({ dvdPower: true });\n      this.setState({ PowerLevel: this.state.PowerLevel + DVD_ON - DVD_OFF });\n      this.setState({\n        ResidualPower: this.state.ResidualPower\n          + DVD_ON * 0.10\n      });\n      this.setState({ triggerRefresh: true });\n      this.AdjustPowerLevel();\n    }\n    else if (this.state.dvdPower && !this.state.ShortedFlag) {\n      this.setState({ dvdPower: false });\n      this.setState({ dvdState: dvdStateStopped });\n      this.setState({ PowerLevel: this.state.PowerLevel + DVD_OFF - DVD_ON });\n      this.setState({\n        ResidualPower: this.state.ResidualPower\n          + DVD_OFF * 0.10\n      });\n      this.setState({ triggerRefresh: true });\n      this.AdjustPowerLevel();\n    }\n  }\n\n  dvdStop() {\n    if (this.state.dvdPower && !this.state.dvdEjected &&\n      (this.state.dvdState === dvdStatePaused || this.state.dvdState === dvdStatePlaying)) {\n      if (this.state.dvdState === dvdStatePaused)\n        this.setState({ PowerLevel: this.state.PowerLevel - DVD_PAUSE });\n      else if (this.state.dvdState === dvdStatePlaying)\n        this.setState({ PowerLevel: this.state.PowerLevel - DVD_PLAY });\n\n      this.setState({ dvdState: dvdStateStopped });\n      this.AdjustPowerLevel();\n      this.setState({ triggerRefresh: true });\n    }\n  }\n\n  dvdPlay() {\n    if (this.state.dvdPower && !this.state.dvdEjected && !this.state.LoadedFlag &&\n      (this.state.dvdState === dvdStateStopped || this.state.dvdState === dvdStatePaused)) {\n      if (this.state.dvdState === dvdStatePaused)\n        this.setState({ PowerLevel: this.state.PowerLevel - DVD_PAUSE });\n\n      this.setState({ dvdState: dvdStatePlaying });\n      this.setState({ PowerLevel: this.state.PowerLevel + DVD_PLAY });\n\n      this.setState({ ResidualPower: this.state.ResidualPower + DVD_PLAY * 0.10 });\n      this.AdjustPowerLevel();\n      this.setState({ triggerRefresh: true });\n    }\n  }\n\n  dvdSetToPause() {\n    this.setState({ dvdState: dvdStatePaused });\n    this.setState({ PowerLevel: this.state.PowerLevel + DVD_PAUSE - DVD_PLAY });\n    this.setState({ ResidualPower: this.state.ResidualPower + DVD_PAUSE * 0.10 });\n    this.setState({ triggerRefresh: true });\n  }\n\n  dvdSetToPlay() {\n    this.setState({ dvds: dvdStatePlaying });\n    this.setState({ PowerLevel: this.state.PowerLevel + DVD_PLAY - DVD_PAUSE });\n    this.setState({ ResidualPower: this.state.ResidualPower + DVD_PLAY * 0.10 });\n    this.setState({ triggerRefresh: true });\n  }\n\n  dvdPause() {\n    if (this.state.dvdPower && !this.state.dvdEjected) {\n      if (this.state.dvdState === dvdStatePlaying) {\n        this.dvdSetToPause();\n      }\n      else if (this.state.dvdState === dvdStatePaused) {\n        this.dvdSetToPlay();\n      }\n      this.AdjustPowerLevel();\n    }\n  }\n\n  dvdEject() {\n    if (!this.state.dvdEjected && !(this.state.dvdState === dvdStatePaused)\n      && !this.state.ShortedFlag) {\n      this.setState({ dvdEjected: true });\n      this.setState({ dvdState: dvdStateStopped });\n      this.setState({ PowerLevel: this.state.PowerLevel + DVD_EJECT - DVD_LOAD });\n      this.setState({ ResidualPower: this.state.ResidualPower + DVD_EJECT * 0.10 });\n      this.setState({ triggerRefresh: true });\n    }\n    else if (this.state.dvdEjected && !this.state.ShortedFlag) {\n      this.setState({ dvdEjected: false });\n      this.setState({ dvdState: dvdStateStopped });\n      this.setState({ PowerLevel: this.state.PowerLevel + DVD_LOAD - DVD_EJECT });\n      this.setState({ ResidualPower: this.state.ResidualPower + DVD_LOAD * 0.10 });\n      this.setState({ LoadedFlag: true });\n      this.setState({ triggerRefresh: true });\n    }\n  }\n\n  refreshButtons() {\n    if (!Boolean(this.state.tvPower)) {\n      this.setState({ tvPowerSrc: require('./img/LightRedPowerOff.png') });\n      this.setState({ volumeUpSrc: require('./img/GreenUpGrey.png') });\n      this.setState({ volumeDownSrc: require('./img/GreenDownGrey.png') });\n      this.setState({ muteSrc: require('./img/RedVolumeGrey.png') });\n      this.setState({ dvdStopSrc: require('./img/Stop.png') });\n    }\n    else {\n      this.setState({ tvPowerSrc: require('./img/GreenPowerOn.png') });\n      this.setState({ volumeUpSrc: require('./img/GreenUpKey.png') });\n      this.setState({ volumeDownSrc: require('./img/GreenDownKey.png') });\n      if (!this.state.muted)\n        this.setState({ muteSrc: require('./img/RedVolume.png') });\n      else\n        this.setState({ muteSrc: require('./img/DarkVolumeRedX.png') });\n    }\n\n    if (this.state.dvdEjected)\n      this.setState({ dvdEjectSrc: require('./img/EjectActive.png') });\n    else\n      this.setState({ dvdEjectSrc: require('./img/Eject.png') });\n\n    if (!this.state.dvdPower) {\n      this.setState({ dvdPowerSrc: require('./img/DvdPowerOff.png') });\n      this.setState({ dvdPlaySrc: require('./img/Play.png') });\n      this.setState({ dvdPauseSrc: require('./img/Pause.png') });\n    } else {\n      this.setState({ dvdPowerSrc: require('./img/DvdPowerOn.png') });\n      if (this.state.dvdState === dvdStatePlaying)\n        this.setState({ dvdPlaySrc: require('./img/PlayActive.png') });\n      else\n        this.setState({ dvdPlaySrc: require('./img/Play.png') });\n\n      if (this.state.dvdState === dvdStatePaused)\n        this.setState({ dvdPauseSrc: require('./img/PauseActive.png') });\n      else\n        this.setState({ dvdPauseSrc: require('./img/Pause.png') });\n\n      if (this.state.dvdState === dvdStateStopped)\n        this.setState({ dvdStopSrc: require('./img/StopActive.png') });\n      else\n        this.setState({ dvdStopSrc: require('./img/Stop.png') });\n\n    }\n\n  }\n\n  volumeDown() {\n    if (this.state.tvPower &&\n      !this.state.muted && this.state.volume > 0) {\n      var newPower = this.state.PowerLevel;\n      newPower -= TV_VOLUME * this.state.volume * 0.75;\n      this.setState({\n        PowerLevel: newPower\n      });\n      var newVolume = this.state.volume - 10;\n\n      this.setState({ volume: newVolume });\n      newPower += TV_VOLUME * newVolume * 0.75;\n\n      this.setState({ PowerLevel: newPower });\n\n      this.setState({\n        ResidualPower: this.state.ResidualPower +\n          TV_VOLUME * newVolume * 0.05\n      });\n      this.setState({ triggerRefresh: true });\n      this.AdjustPowerLevel();\n    }\n  }\n\n  volumeUp() {\n    if (this.state.tvPower && !this.state.muted\n      && this.state.volume < 100 && this.state.volume < this.state.UnmutedLevel) {\n      var newPower = this.state.PowerLevel;\n      var newVolume = this.state.volume;\n      newPower -= TV_VOLUME * newVolume * 0.75;\n\n      this.setState({ PowerLevel: newPower });\n\n      newVolume += 10;\n      this.setState({ volume: newVolume });\n      newPower += TV_VOLUME * newVolume * 0.75;\n\n      this.setState({ PowerLevel: newPower });\n\n      this.setState({ ResidualPower: this.state.ResidualPower + TV_VOLUME * newVolume * 0.05 });\n      this.AdjustPowerLevel();\n      this.setState({ triggerRefresh: true });\n    }\n  }\n\n  mute() {\n    if (!this.state.tvPower)\n      return;\n\n    if (this.state.muted) {\n      this.setState({ muted: false });\n      this.setState({ UnmutedLevel: this.state.volume });\n      this.setState({ triggerRefresh: true });\n    }\n    else if (!this.state.muted) {\n      this.setState({ muted: true });\n      this.setState({ triggerRefresh: true });\n    }\n  }\n\n  ResetVisuals() {\n    this.setState({ dvdState: dvdStateStopped });\n    this.setState({ dvdPower: false });\n    this.setState({ tvPower: false });\n    this.setState({ triggerRefresh: true });\n  }\n\n  AdjustPowerLevel() {\n    var power = this.state.PowerLevel;\n\n    if (this.state.PowerLevel > 200 || this.state.ResidualPower > 100) {\n      this.setState({ ShortedFlag: true });\n\n      this.ResetVisuals();\n    }\n  }\n\n\n\n  ResetTest() {\n    this.setState({ PowerLevel: 0 });\n    this.setState({ ResidualPower: 0 });\n    this.setState({ LoadedFlag: false });\n    this.setState({ TVSwitchCount: 0 });\n    this.setState({ ShortedFlag: false });\n    this.setState({ tvPower: false });\n    this.setState({ dvdPower: false });\n\n    this.setState({ volume: 50 });\n    this.setState({ UnmutedLevel: 100 });\n    this.setState({ muted: false });\n    this.setState({ dvdEjected: false });\n\n    this.AdjustPowerLevel();\n    this.setState({ triggerRefresh: true });\n  }\n\n  render() {\n    if (this.state.triggerRefresh) {\n      this.refreshButtons();\n      this.refreshTvImage();\n      this.setState({ triggerRefresh: false });\n    }\n    return (\n      <div>\n        <ResetTestButton onClick={() => this.handleResetButton()}></ResetTestButton>\n        <p className='newline'></p>\n        <div className=\"centerMeWithoutWrap\">\n          <TvImage id=\"tvi\" alt=\"TV OFF\" src={this.state.imgSrc} />\n        </div>\n        <p className='newline'></p>\n        <div className=\"centerMeWithoutWrap\">\n          <div classname=\"buttonPanel\">\n            <TvControls\n              tvPowerSrc={this.state.tvPowerSrc}\n              volumeUpSrc={this.state.volumeUpSrc}\n              volumeDownSrc={this.state.volumeDownSrc}\n              muteSrc={this.state.muteSrc}\n              refreshFxn={() => this.state.refreshFxn()}\n              switchTvPower={() => this.switchTvPower()}\n              volumeUp={() => this.volumeUp()}\n              volumeDown={() => this.volumeDown()}\n              mute={() => this.mute()}\n              volume={this.state.volume}\n              volumeColor={this.state.volumeColor}\n              muted={this.state.muted}\n              tvPower={this.state.tvPower}\n              PowerLevel={this.state.PowerLevel}\n              ResidualPower={this.state.ResidualPower}\n            ></TvControls>\n          </div>\n        </div>\n        <p className='newline'></p>\n        <div className=\"centerMeWithoutWrap\">\n          <div classname=\"buttonPanel\">\n            <DvdControls\n              dvdPowerSrc={this.state.dvdPowerSrc}\n              dvdPlaySrc={this.state.dvdPlaySrc}\n              dvdPauseSrc={this.state.dvdPauseSrc}\n              dvdStopSrc={this.state.dvdStopSrc}\n              dvdEjectSrc={this.state.dvdEjectSrc}\n              refreshFxn={() => this.state.refreshFxn()}\n              switchDvdPower={() => this.switchDvdPower()}\n              dvdStop={() => this.dvdStop()}\n              dvdPlay={() => this.dvdPlay()}\n              dvdPause={() => this.dvdPause()}\n              dvdEject={() => this.dvdEject()}\n              dvdPower={this.state.dvdPower}\n              dvdState={this.state.dvdState}\n              PowerLevel={this.state.PowerLevel}\n              ResidualPower={this.state.ResidualPower}\n            ></DvdControls>\n          </div>\n        </div>\n      </div>\n\n    );\n  }\n}\n// ========================================\n\nReactDOM.render(\n  <EmptyScreen />,\n  document.getElementById('root')\n);\n","module.exports = __webpack_public_path__ + \"static/media/TVOffDvdOn.b91910e7.png\";","module.exports = __webpack_public_path__ + \"static/media/TVOnDvdOff.24d92551.png\";","module.exports = __webpack_public_path__ + \"static/media/TVOnDvdOn.79f90726.png\";","module.exports = __webpack_public_path__ + \"static/media/TVOffDvdOffDiskEjected.c6ea4ff6.png\";","module.exports = __webpack_public_path__ + \"static/media/TVOffDvdOnDiskEjected.d944d963.png\";","module.exports = __webpack_public_path__ + \"static/media/TVOnDvdOffDiskEjected.22625938.png\";","module.exports = __webpack_public_path__ + \"static/media/TVOnDvdOnDiskEjected.b747f8ca.png\";","module.exports = __webpack_public_path__ + \"static/media/GreenPowerOn.362f96ae.png\";","module.exports = __webpack_public_path__ + \"static/media/GreenUpKey.00b6bfcb.png\";","module.exports = __webpack_public_path__ + \"static/media/GreenDownKey.a5cbd84e.png\";","module.exports = __webpack_public_path__ + \"static/media/RedVolume.78cbf165.png\";","module.exports = __webpack_public_path__ + \"static/media/DarkVolumeRedX.6dc305f4.png\";","module.exports = __webpack_public_path__ + \"static/media/EjectActive.50ed40c3.png\";","module.exports = __webpack_public_path__ + \"static/media/DvdPowerOn.21df8a04.png\";","module.exports = __webpack_public_path__ + \"static/media/PlayActive.24ffb357.png\";","module.exports = __webpack_public_path__ + \"static/media/PauseActive.b3b71f89.png\";","module.exports = __webpack_public_path__ + \"static/media/StopActive.cb166799.png\";"],"sourceRoot":""}